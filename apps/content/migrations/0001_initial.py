# Generated by Django 4.2.11 on 2025-05-06 03:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("slug", models.SlugField(blank=True, max_length=255, unique=True)),
                ("description", models.TextField()),
                (
                    "language",
                    models.CharField(
                        choices=[
                            ("en", "English"),
                            ("fr", "French"),
                            ("es", "Spanish"),
                            ("de", "German"),
                            ("it", "Italian"),
                            ("pt", "Portuguese"),
                            ("ru", "Russian"),
                            ("zh", "Chinese"),
                            ("ja", "Japanese"),
                            ("ko", "Korean"),
                            ("ar", "Arabic"),
                            ("hi", "Hindi"),
                            ("sw", "Swahili"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("A1", "Beginner"),
                            ("A2", "Elementary"),
                            ("B1", "Intermediate"),
                            ("B2", "Upper Intermediate"),
                            ("C1", "Advanced"),
                            ("C2", "Proficient"),
                        ],
                        max_length=2,
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="course_images/"
                    ),
                ),
                ("is_featured", models.BooleanField(default=False)),
                ("is_published", models.BooleanField(default=False)),
                ("duration_weeks", models.PositiveIntegerField(default=8)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "students",
                    models.ManyToManyField(
                        blank=True,
                        related_name="enrolled_courses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="taught_courses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="GroupSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "language",
                    models.CharField(
                        choices=[
                            ("en", "English"),
                            ("fr", "French"),
                            ("es", "Spanish"),
                            ("de", "German"),
                            ("it", "Italian"),
                            ("pt", "Portuguese"),
                            ("ru", "Russian"),
                            ("zh", "Chinese"),
                            ("ja", "Japanese"),
                            ("ko", "Korean"),
                            ("ar", "Arabic"),
                            ("hi", "Hindi"),
                            ("sw", "Swahili"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("A1", "Beginner"),
                            ("A2", "Elementary"),
                            ("B1", "Intermediate"),
                            ("B2", "Upper Intermediate"),
                            ("C1", "Advanced"),
                            ("C2", "Proficient"),
                        ],
                        max_length=2,
                    ),
                ),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField()),
                ("duration_minutes", models.PositiveIntegerField(default=60)),
                ("max_students", models.PositiveIntegerField(default=5)),
                ("min_students", models.PositiveIntegerField(default=2)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("scheduled", "Scheduled"),
                            ("active", "Active"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                (
                    "price",
                    models.DecimalField(decimal_places=2, default=15.0, max_digits=6),
                ),
                (
                    "tags",
                    models.CharField(
                        blank=True, help_text="Comma-separated tags", max_length=255
                    ),
                ),
                ("meeting_link", models.URLField(blank=True, null=True)),
                ("recording_url", models.URLField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                ("cancelled_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "ordering": ["-start_time"],
            },
        ),
        migrations.CreateModel(
            name="Instructor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("bio", models.TextField(blank=True, null=True)),
                ("teaching_style", models.TextField(blank=True, null=True)),
                (
                    "profile_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="instructor_profiles/"
                    ),
                ),
                ("is_available", models.BooleanField(default=True)),
                ("is_featured", models.BooleanField(default=False)),
                (
                    "hourly_rate",
                    models.DecimalField(decimal_places=2, default=25.0, max_digits=6),
                ),
                (
                    "teaching_languages",
                    multiselectfield.db.fields.MultiSelectField(
                        blank=True,
                        choices=[
                            ("en", "English"),
                            ("fr", "French"),
                            ("es", "Spanish"),
                            ("de", "German"),
                            ("it", "Italian"),
                            ("pt", "Portuguese"),
                            ("ru", "Russian"),
                            ("zh", "Chinese"),
                            ("ja", "Japanese"),
                            ("ko", "Korean"),
                            ("ar", "Arabic"),
                            ("hi", "Hindi"),
                            ("sw", "Swahili"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "specialties",
                    multiselectfield.db.fields.MultiSelectField(
                        blank=True,
                        choices=[
                            ("business", "Business Language"),
                            ("academic", "Academic Language"),
                            ("conversation", "Conversation Practice"),
                            ("exam", "Exam Preparation"),
                            ("children", "Teaching Children"),
                            ("medical", "Medical Terminology"),
                            ("travel", "Travel & Tourism"),
                            ("technical", "Technical & Scientific"),
                        ],
                        max_length=100,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="instructor_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LearningModule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="modules",
                        to="content.course",
                    ),
                ),
            ],
            options={
                "ordering": ["course", "order"],
            },
        ),
        migrations.CreateModel(
            name="Lesson",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("slug", models.SlugField(blank=True, max_length=255)),
                ("content", models.TextField()),
                ("video_url", models.CharField(blank=True, max_length=255, null=True)),
                ("audio_url", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "attachment",
                    models.FileField(
                        blank=True, null=True, upload_to="lesson_attachments/"
                    ),
                ),
                ("duration_minutes", models.PositiveIntegerField(default=30)),
                (
                    "tags",
                    models.CharField(
                        blank=True, help_text="Comma-separated tags", max_length=255
                    ),
                ),
                ("order", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "module",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lessons",
                        to="content.learningmodule",
                    ),
                ),
            ],
            options={
                "ordering": ["module", "order"],
            },
        ),
        migrations.CreateModel(
            name="PrivateSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        choices=[
                            ("en", "English"),
                            ("fr", "French"),
                            ("es", "Spanish"),
                            ("de", "German"),
                            ("it", "Italian"),
                            ("pt", "Portuguese"),
                            ("ru", "Russian"),
                            ("zh", "Chinese"),
                            ("ja", "Japanese"),
                            ("ko", "Korean"),
                            ("ar", "Arabic"),
                            ("hi", "Hindi"),
                            ("sw", "Swahili"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("A1", "Beginner"),
                            ("A2", "Elementary"),
                            ("B1", "Intermediate"),
                            ("B2", "Upper Intermediate"),
                            ("C1", "Advanced"),
                            ("C2", "Proficient"),
                        ],
                        max_length=2,
                    ),
                ),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField()),
                ("duration_minutes", models.PositiveIntegerField(default=60)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("available", "Available"),
                            ("booked", "Booked"),
                            ("active", "Active"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                            ("no-show", "No Show"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("is_trial", models.BooleanField(default=False)),
                ("meeting_link", models.URLField(blank=True, null=True)),
                ("recording_url", models.URLField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                ("cancelled_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "instructor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="private_sessions",
                        to="content.instructor",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="private_sessions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-start_time"],
            },
        ),
        migrations.CreateModel(
            name="SessionFeedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "session_type",
                    models.CharField(
                        choices=[
                            ("private", "Private Session"),
                            ("group", "Group Session"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "rating",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "1 Stars"),
                            (2, "2 Stars"),
                            (3, "3 Stars"),
                            (4, "4 Stars"),
                            (5, "5 Stars"),
                        ]
                    ),
                ),
                ("comment", models.TextField()),
                (
                    "teaching_quality",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        choices=[
                            (1, "1 Stars"),
                            (2, "2 Stars"),
                            (3, "3 Stars"),
                            (4, "4 Stars"),
                            (5, "5 Stars"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "technical_quality",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        choices=[
                            (1, "1 Stars"),
                            (2, "2 Stars"),
                            (3, "3 Stars"),
                            (4, "4 Stars"),
                            (5, "5 Stars"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "content_relevance",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        choices=[
                            (1, "1 Stars"),
                            (2, "2 Stars"),
                            (3, "3 Stars"),
                            (4, "4 Stars"),
                            (5, "5 Stars"),
                        ],
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "group_session",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedback",
                        to="content.groupsession",
                    ),
                ),
                (
                    "private_session",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedback",
                        to="content.privatesession",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="given_session_feedback",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Resource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "resource_type",
                    models.CharField(
                        choices=[
                            ("document", "Document"),
                            ("video", "Video"),
                            ("audio", "Audio"),
                            ("image", "Image"),
                            ("link", "External Link"),
                            ("exercise", "Exercise"),
                            ("vocabulary", "Vocabulary List"),
                        ],
                        default="document",
                        max_length=20,
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        blank=True, null=True, upload_to="content_resources/"
                    ),
                ),
                ("external_url", models.URLField(blank=True, null=True)),
                (
                    "language",
                    models.CharField(
                        choices=[
                            ("en", "English"),
                            ("fr", "French"),
                            ("es", "Spanish"),
                            ("de", "German"),
                            ("it", "Italian"),
                            ("pt", "Portuguese"),
                            ("ru", "Russian"),
                            ("zh", "Chinese"),
                            ("ja", "Japanese"),
                            ("ko", "Korean"),
                            ("ar", "Arabic"),
                            ("hi", "Hindi"),
                            ("sw", "Swahili"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("A1", "Beginner"),
                            ("A2", "Elementary"),
                            ("B1", "Intermediate"),
                            ("B2", "Upper Intermediate"),
                            ("C1", "Advanced"),
                            ("C2", "Proficient"),
                        ],
                        max_length=2,
                    ),
                ),
                (
                    "tags",
                    models.CharField(
                        blank=True, help_text="Comma-separated tags", max_length=255
                    ),
                ),
                ("is_public", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "course",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="resources",
                        to="content.course",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_resources",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "lesson",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="resources",
                        to="content.lesson",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="LessonCompletion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("completed_at", models.DateTimeField(auto_now_add=True)),
                (
                    "lesson",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="completions",
                        to="content.lesson",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="completed_lessons",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="InstructorReview",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.PositiveSmallIntegerField(
                        choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)]
                    ),
                ),
                ("comment", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "instructor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="content.instructor",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="given_reviews",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="groupsession",
            name="instructor",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="group_sessions",
                to="content.instructor",
            ),
        ),
        migrations.AddField(
            model_name="groupsession",
            name="students",
            field=models.ManyToManyField(
                blank=True, related_name="group_sessions", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.CreateModel(
            name="CourseProgress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("last_accessed", models.DateTimeField(auto_now=True)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_progress",
                        to="content.course",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="course_progress",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="sessionfeedback",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("private_session__isnull", False),
                    ("group_session__isnull", False),
                    _connector="OR",
                ),
                name="feedback_has_session",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="lessoncompletion",
            unique_together={("student", "lesson")},
        ),
        migrations.AlterUniqueTogether(
            name="lesson",
            unique_together={("module", "slug")},
        ),
        migrations.AlterUniqueTogether(
            name="instructorreview",
            unique_together={("instructor", "student")},
        ),
        migrations.AlterUniqueTogether(
            name="courseprogress",
            unique_together={("student", "course")},
        ),
    ]
